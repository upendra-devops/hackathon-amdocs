[
    {
        "sha": "12bc0ebba2d40067c5a3e954a7f952c75bf35e37",
        "filename": "pom.xml",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/blob/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/pom.xml",
        "raw_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/raw/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/pom.xml",
        "contents_url": "https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/contents/pom.xml?ref=fa6c60ee5889d9693a0fbe0d6917c973a264fbd7",
        "patch": "@@ -26,6 +26,13 @@\n \t\t\t\t<type>pom</type>\n \t\t\t\t<scope>import</scope>\n \t\t\t</dependency>\n+\t\t\t<dependency>\n+\t\t\t\t<groupId>org.springframework.cloud</groupId>\n+\t\t\t\t<artifactId>spring-cloud-dependencies</artifactId>\n+\t\t\t\t<version>2023.0.0</version>\n+\t\t\t\t<type>pom</type>\n+\t\t\t\t<scope>import</scope>\n+\t\t\t</dependency>\n \t\t</dependencies>\n \t</dependencyManagement>\n \n@@ -56,6 +63,12 @@\n \t\t\t<artifactId>lombok</artifactId>\n \t\t\t<version>1.18.30</version>\n \t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.cloud</groupId>\n+\t\t\t<artifactId>spring-cloud-starter-openfeign</artifactId>\n+\t\t</dependency>\n+\n \t</dependencies>\n \n \t<build>"
    },
    {
        "sha": "1aef394afbf8870cb74545b2edc71d31ce2ee0b1",
        "filename": "src/main/java/com/amdocs/ai/openai/docgen/Application.java",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/blob/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2FApplication.java",
        "raw_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/raw/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2FApplication.java",
        "contents_url": "https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/contents/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2FApplication.java?ref=fa6c60ee5889d9693a0fbe0d6917c973a264fbd7",
        "patch": "@@ -2,8 +2,10 @@ package com.amdocs.ai.openai.docgen;\n \n import org.springframework.boot.SpringApplication;\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.cloud.openfeign.EnableFeignClients;\n \n @SpringBootApplication\n+@EnableFeignClients\n public class Application {\n \n     public static void main(String[] args) {"
    },
    {
        "sha": "c843577906263111b5b48aab2abd5bbdb8ecd124",
        "filename": "src/main/java/com/amdocs/ai/openai/docgen/controller/SimpleAiController.java",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/blob/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fcontroller%2FSimpleAiController.java",
        "raw_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/raw/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fcontroller%2FSimpleAiController.java",
        "contents_url": "https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/contents/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fcontroller%2FSimpleAiController.java?ref=fa6c60ee5889d9693a0fbe0d6917c973a264fbd7",
        "patch": "@@ -9,6 +9,7 @@ package com.amdocs.ai.openai.docgen.controller;\n import com.amdocs.ai.openai.docgen.model.CodeFragment;\n import com.amdocs.ai.openai.docgen.model.Completion;\n import com.amdocs.ai.openai.docgen.model.DocuFormat;\n+import com.amdocs.ai.openai.docgen.service.IntegrationService;\n import com.amdocs.ai.openai.docgen.service.SimpleAIService;\n import com.fasterxml.jackson.annotation.JsonAutoDetect;\n import com.fasterxml.jackson.annotation.PropertyAccessor;\n@@ -52,12 +53,14 @@ import java.util.Map;\n public class SimpleAiController {\n \tprivate final ChatClient aiClient;\n \tprivate final SimpleAIService simpleAIService;\n+\tprivate final IntegrationService integrationService;\n \tprivate final ObjectMapper om;\n \n \t@Autowired\n-\tpublic SimpleAiController(ChatClient aiClient, SimpleAIService simpleAIService) {\n+\tpublic SimpleAiController(ChatClient aiClient, SimpleAIService simpleAIService, IntegrationService integrationService) {\n \t\tthis.aiClient = aiClient;\n \t\tthis.simpleAIService = simpleAIService;\n+\t\tthis.integrationService = integrationService;\n \t\tom = new ObjectMapper();\n \t\tom.setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY);\n \t}\n@@ -76,13 +79,9 @@ public class SimpleAiController {\n \t\treturn (new Completion(this.aiClient.call(prompt.toString()))).getCompletion();\n \t}\n \n-\t@GetMapping({\"/ai/generateTests\"})\n-\tpublic String test() {\n-\t\tMap<String, Object> model = new HashMap();\n-\t\tmodel.put(\"javaCode\", \"public class Calculator {\\n    \\n    public static int add(int x, int y) {\\n        return x+y;\\n    }\\n    \\n    public static int subtract(int x, int y) {\\n        return x-y;\\n    }\\n}\");\n-\t\tPromptTemplate promptTemplate = new PromptTemplate(\"Generate testcases for below class in a input/output tabular format. \\n\\n {javaCode}\", model);\n-\t\tPrompt prompt = promptTemplate.create();\n-\t\treturn (new Completion(this.aiClient.call(prompt.toString()))).getCompletion();\n+\t@GetMapping({\"/ai/jira\"})\n+\tpublic String jira() throws JsonProcessingException {\n+\t\treturn new Completion(integrationService.getJiraStory(\"AID-3\")).getCompletion();\n \t}\n \n \t@GetMapping(value = {\"/ai/roleBased\"}, produces = MediaType.APPLICATION_JSON_VALUE)\n@@ -152,8 +151,9 @@ public class SimpleAiController {\n \t}\n \n \t@PostMapping({\"/ai/trigger\"})\n-\tpublic ResponseEntity trigger(@RequestBody JsonNode payload) {\n+\tpublic ResponseEntity trigger(@RequestBody JsonNode payload) throws JsonProcessingException {\n \t\tlog.info(payload.toPrettyString());\n+\t\tintegrationService.getCodeFromGit(payload);\n \t\treturn ResponseEntity.ok().build();\n \t}\n "
    },
    {
        "sha": "d333c703a7dda1f32dfd8ede9aaa267fb0a7b28e",
        "filename": "src/main/java/com/amdocs/ai/openai/docgen/git/GitFeignClient.java",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/blob/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fgit%2FGitFeignClient.java",
        "raw_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/raw/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fgit%2FGitFeignClient.java",
        "contents_url": "https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/contents/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fgit%2FGitFeignClient.java?ref=fa6c60ee5889d9693a0fbe0d6917c973a264fbd7",
        "patch": "@@ -0,0 +1,19 @@\n+package com.amdocs.ai.openai.docgen.git;\n+\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import org.springframework.cloud.openfeign.FeignClient;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestHeader;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestMethod;\n+\n+@FeignClient(name = \"gitClient\", value = \"gitClient\", url = \"https://github-us.production.tvn.com/\")\n+public interface GitFeignClient {\n+\n+    @RequestMapping(method = RequestMethod.GET, value = \"api/v3/repos/{user}/{repo}/commits?path={filePath}\")\n+    ArrayNode getCommits(@PathVariable String repo, @PathVariable String filePath, @PathVariable String user,\n+                         @RequestHeader(\"Authorization\") String token);\n+\n+    @RequestMapping(method = RequestMethod.GET, value = \"raw/{user}/{repo}/{sha}/{filePath}\")\n+    String getCode(@PathVariable String user, @PathVariable String repo, @PathVariable String sha, @PathVariable String filePath);\n+}"
    },
    {
        "sha": "a07e356898d5750a1697894df1bee64b20793010",
        "filename": "src/main/java/com/amdocs/ai/openai/docgen/jira/JiraFeignClient.java",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/blob/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fjira%2FJiraFeignClient.java",
        "raw_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/raw/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fjira%2FJiraFeignClient.java",
        "contents_url": "https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/contents/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fjira%2FJiraFeignClient.java?ref=fa6c60ee5889d9693a0fbe0d6917c973a264fbd7",
        "patch": "@@ -0,0 +1,16 @@\n+package com.amdocs.ai.openai.docgen.jira;\n+\n+import org.springframework.cloud.openfeign.FeignClient;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestHeader;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestMethod;\n+\n+@FeignClient(name = \"jiraClient\", value = \"jiraClient\", url = \"https://aidocs.atlassian.net/\")\n+public interface JiraFeignClient {\n+\n+    //static final String TOKEN = \"Basic YW50cmkucGFuYWdpb3RvdUB2dWJpcXVpdHkubmV0OkFUQVRUM3hGZkdGMDF4OHYwdEZ2RzM4clBKejlWUEhldWZ6UEc1ZGFKTWNaWm1YN1ZvTGxkOEY3dkc2ZE90andjblVleWRqbzJFdE1DNHAxMm9GSlkwNnpTNzV5LWZLOTZjY3ktbUI2LU5seDgybmotVkRNdG8zb3ZTWmtjQVlzMEZscEp0R09mMlBYNkZkOFVMS2lteWpwSnRiWDFTMDRQWEhRSThTb1Q1SjdKeWdDNE1ESzZLZz04QUZDMkQzNQ==\";\n+\n+    @RequestMapping(method = RequestMethod.GET, value = \"rest/api/2/issue/{issueId}?fields=description\")\n+    String getJiraStoryDescription(@PathVariable String issueId, @RequestHeader(\"Authorization\") String token);\n+}"
    },
    {
        "sha": "4b00cf28900798b5ece9b8d7305bbd48a82befb4",
        "filename": "src/main/java/com/amdocs/ai/openai/docgen/model/GitCommitResource.java",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/blob/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fmodel%2FGitCommitResource.java",
        "raw_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/raw/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fmodel%2FGitCommitResource.java",
        "contents_url": "https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/contents/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fmodel%2FGitCommitResource.java?ref=fa6c60ee5889d9693a0fbe0d6917c973a264fbd7",
        "patch": "@@ -0,0 +1,24 @@\n+package com.amdocs.ai.openai.docgen.model;\n+\n+import lombok.Builder;\n+import lombok.Getter;\n+\n+import java.net.URL;\n+\n+@Builder\n+@Getter\n+public class GitCommitResource {\n+    private boolean isNew;\n+\n+    private String user;\n+\n+    private String filePath;\n+\n+    private CodeFragment resource;\n+\n+    private String previousCommitId;\n+\n+    private String latestCommitId;\n+\n+    private URL contentURL;\n+}"
    },
    {
        "sha": "5805ce61f975311604dbef31e84243647fdd0682",
        "filename": "src/main/java/com/amdocs/ai/openai/docgen/model/GitPRPoJo.java",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/blob/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fmodel%2FGitPRPoJo.java",
        "raw_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/raw/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fmodel%2FGitPRPoJo.java",
        "contents_url": "https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/contents/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fmodel%2FGitPRPoJo.java?ref=fa6c60ee5889d9693a0fbe0d6917c973a264fbd7",
        "patch": "@@ -0,0 +1,19 @@\n+package com.amdocs.ai.openai.docgen.model;\n+\n+import lombok.Builder;\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+import java.util.List;\n+\n+@Getter\n+@Builder\n+public class GitPRPoJo {\n+\n+    private String jiraId;\n+\n+    @Setter\n+    private String jiraStory;\n+\n+    private List<GitCommitResource> commitedFiles;\n+}"
    },
    {
        "sha": "ea533cc3a7913f0f67cd63e192564253793fd9f7",
        "filename": "src/main/java/com/amdocs/ai/openai/docgen/model/TestCaseFormat.java",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/blob/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fmodel%2FTestCaseFormat.java",
        "raw_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/raw/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fmodel%2FTestCaseFormat.java",
        "contents_url": "https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/contents/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fmodel%2FTestCaseFormat.java?ref=fa6c60ee5889d9693a0fbe0d6917c973a264fbd7",
        "patch": "@@ -2,8 +2,10 @@ package com.amdocs.ai.openai.docgen.model;\n \n import lombok.Data;\n \n+import java.util.List;\n+\n @Data\n public class TestCaseFormat {\n \n-    private String testCase;\n+    private List<String> testCases;\n }"
    },
    {
        "sha": "a4fbdb0b773324072b27a6fa2004551dfa5c2a01",
        "filename": "src/main/java/com/amdocs/ai/openai/docgen/service/IntegrationService.java",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/blob/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fservice%2FIntegrationService.java",
        "raw_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/raw/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fservice%2FIntegrationService.java",
        "contents_url": "https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/contents/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fservice%2FIntegrationService.java?ref=fa6c60ee5889d9693a0fbe0d6917c973a264fbd7",
        "patch": "@@ -0,0 +1,54 @@\n+package com.amdocs.ai.openai.docgen.service;\n+\n+import com.amdocs.ai.openai.docgen.git.GitFeignClient;\n+import com.amdocs.ai.openai.docgen.jira.JiraFeignClient;\n+import com.amdocs.ai.openai.docgen.model.GitPRPoJo;\n+import com.amdocs.ai.openai.docgen.util.GitHubPayloadParser;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.stream.StreamSupport;\n+\n+@Service\n+@Slf4j\n+public class IntegrationService {\n+\n+    private JiraFeignClient jiraFeignClient;\n+    private GitFeignClient gitFeignClient;\n+    private ObjectMapper objectMapper;\n+\n+    @Value(\"${com.amdocs.jira.auth}\")\n+    private String jiraToken;\n+\n+    @Value(\"${com.amdocs.github.auth}\")\n+    private String githubToken;\n+\n+    public IntegrationService(JiraFeignClient jiraFeignClient, GitFeignClient gitFeignClient) {\n+        this.jiraFeignClient = jiraFeignClient;\n+        this.gitFeignClient = gitFeignClient;\n+        objectMapper = new ObjectMapper();\n+    }\n+\n+    public String getJiraStory(String issueId) throws JsonProcessingException {\n+        String response = jiraFeignClient.getJiraStoryDescription(issueId, jiraToken);\n+        JsonNode node = objectMapper.readValue(response, JsonNode.class);\n+        return node.get(\"fields\").get(\"description\").toString();\n+    }\n+\n+    public void getCodeFromGit(JsonNode payload) throws JsonProcessingException {\n+        GitPRPoJo gitPRPoJo = GitHubPayloadParser.parse(payload);\n+        //gitPRPoJo.setJiraStory(this.getJiraStory(gitPRPoJo.getJiraId()));\n+        gitPRPoJo.getCommitedFiles().stream().forEach(gitCommitResource -> {\n+            ArrayNode commits = gitFeignClient.getCommits(\"hackathon\", gitCommitResource.getUser(), gitCommitResource.getFilePath(), githubToken);\n+            StreamSupport.stream(commits.spliterator(), false).forEach(commit -> {\n+                log.info(commit.get(\"sha\").toString());\n+            });\n+\n+        });\n+    }\n+}"
    },
    {
        "sha": "6e41b5f351a8454f0c3cd1dcafd0760b07ce43b3",
        "filename": "src/main/java/com/amdocs/ai/openai/docgen/service/SimpleAIService.java",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/blob/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fservice%2FSimpleAIService.java",
        "raw_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/raw/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fservice%2FSimpleAIService.java",
        "contents_url": "https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/contents/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Fservice%2FSimpleAIService.java?ref=fa6c60ee5889d9693a0fbe0d6917c973a264fbd7",
        "patch": "@@ -39,7 +39,7 @@ public class SimpleAIService {\n             \"1. Introduction section gives brief idea about the functionality.\\n \" +\n             \"2. Solution section gives details explanation about the solution. \\n\" +\n             \"3. Adoption section will have technical explanation about using/adopting new functionality.\\n {format}\";\n-    private static final String CREATE_TEST_TEXT = \"Create {type} testcases for a user story {story}. \\n {testcaseformat}\";\n+    private static final String CREATE_TEST_TEXT = \"Create list of {type} testcases for a user story {story}. \\n {testcaseformat}\";\n \n     public SimpleAIService(ChatClient aiClient) {\n         this.aiClient = aiClient;"
    },
    {
        "sha": "1f0405cfb23cd46234980d6aa7fb9b0060512638",
        "filename": "src/main/java/com/amdocs/ai/openai/docgen/util/GitHubPayloadParser.java",
        "status": "added",
        "additions": 99,
        "deletions": 0,
        "changes": 99,
        "blob_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/blob/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Futil%2FGitHubPayloadParser.java",
        "raw_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/raw/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Futil%2FGitHubPayloadParser.java",
        "contents_url": "https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/contents/src%2Fmain%2Fjava%2Fcom%2Famdocs%2Fai%2Fopenai%2Fdocgen%2Futil%2FGitHubPayloadParser.java?ref=fa6c60ee5889d9693a0fbe0d6917c973a264fbd7",
        "patch": "@@ -0,0 +1,99 @@\n+package com.amdocs.ai.openai.docgen.util;\n+\n+import com.amdocs.ai.openai.docgen.model.GitCommitResource;\n+import com.amdocs.ai.openai.docgen.model.GitPRPoJo;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+\n+import java.io.BufferedReader;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Base64;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.StreamSupport;\n+\n+public class GitHubPayloadParser {\n+\n+    private static Map<String, String> info = new HashMap<>();\n+    private static Set<String> commitMessages = new HashSet<>();\n+    private static Set<String> addedFiles = new HashSet<>();\n+    private static Set<String> modifiedFiles = new HashSet<>();\n+    private static String username;\n+\n+    public static GitPRPoJo parse(JsonNode rootNode) {\n+\n+        List<GitCommitResource> poJoList = new ArrayList<>();\n+        Iterator<Map.Entry<String, JsonNode>> fields = rootNode.fields();\n+\n+        while (fields.hasNext()) {\n+            Map.Entry<String, JsonNode> field = fields.next();\n+            if(\"commits\".equals(field.getKey())){\n+                parseCommits((ArrayNode) field.getValue());\n+            }\n+\n+            if(\"head_commit\".equals(field.getKey())) {\n+                username = getUserName(field.getValue());\n+            }\n+\n+        }\n+\n+        poJoList.addAll(addedFiles.stream().map(file ->\n+                GitCommitResource.builder().filePath(file).isNew(true).user(username).build()).collect(Collectors.toList()));\n+\n+        poJoList.addAll(modifiedFiles.stream().map(file ->\n+                GitCommitResource.builder().filePath(file).isNew(false).user(username).build()).collect(Collectors.toList()));\n+\n+        return GitPRPoJo.builder().commitedFiles(poJoList).jiraId(commitMessages.stream().findFirst().get()).build();\n+    }\n+\n+    private static String getUserName(JsonNode value) {\n+        return value.get(\"committer\").get(\"username\").asText();\n+    }\n+\n+    public static void parseCommits(ArrayNode commits) {\n+        Iterator<JsonNode> elements = commits.elements();\n+        while (elements.hasNext()) {\n+            JsonNode commit = elements.next();\n+            addedFiles.addAll(StreamSupport.stream(commit.get(\"added\").spliterator(), false).map(JsonNode::asText).collect(Collectors.toList()));\n+            modifiedFiles.addAll(StreamSupport.stream(commit.get(\"modified\").spliterator(), false).map(JsonNode::asText).collect(Collectors.toList()));\n+            commitMessages.add(Arrays.stream(commit.get(\"message\").toString().split(\" \")).filter(s -> s.startsWith(\"AID-\")).findFirst().orElse(\"JIRA ID Not Found\"));\n+\n+        }\n+    }\n+\n+    public static void main(String[] args) throws IOException {\n+        String payloadStr = readFromInputStream(new FileInputStream(\"/Users/hajoshi/Gen AI Dev/repo/hackathon/src/main/resources/gitPayload.txt\"));\n+        ObjectMapper objectMapper = new ObjectMapper();\n+\n+        JsonNode node = objectMapper.readValue(payloadStr, JsonNode.class);\n+        GitPRPoJo gitPRData = parse(node);\n+        System.out.println(gitPRData);\n+       /*byte[] decodedBytes = Base64.getDecoder().decode(\"aGpvc2hpMjpnaHBfdU83NzFJWlZTbzZwRDB6ZnVFNzBuelM2blNSa0Y3M2RoYXpu\");\n+        String decodedString = new String(decodedBytes);\n+        System.out.println(decodedString);*/\n+    }\n+\n+    private static String readFromInputStream(InputStream inputStream)\n+            throws IOException {\n+        StringBuilder resultStringBuilder = new StringBuilder();\n+        try (BufferedReader br\n+                     = new BufferedReader(new InputStreamReader(inputStream))) {\n+            String line;\n+            while ((line = br.readLine()) != null) {\n+                resultStringBuilder.append(line).append(\"\\n\");\n+            }\n+        }\n+        return resultStringBuilder.toString();\n+    }\n+}"
    },
    {
        "sha": "72fae6868e694bbbaea5a4982be41d9e9369e5b8",
        "filename": "src/main/resources/application.properties",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/blob/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fresources%2Fapplication.properties",
        "raw_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/raw/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fresources%2Fapplication.properties",
        "contents_url": "https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/contents/src%2Fmain%2Fresources%2Fapplication.properties?ref=fa6c60ee5889d9693a0fbe0d6917c973a264fbd7",
        "patch": "@@ -1 +1,3 @@\n-spring.ai.openai.api-key=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\n\\ No newline at end of file\n+spring.ai.openai.api-key=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\n+com.amdocs.jira.auth =Basic YW50cmkucGFuYWdpb3RvdUB2dWJpcXVpdHkubmV0OkFUQVRUM3hGZkdGMDF4OHYwdEZ2RzM4clBKejlWUEhldWZ6UEc1ZGFKTWNaWm1YN1ZvTGxkOEY3dkc2ZE90andjblVleWRqbzJFdE1DNHAxMm9GSlkwNnpTNzV5LWZLOTZjY3ktbUI2LU5seDgybmotVkRNdG8zb3ZTWmtjQVlzMEZscEp0R09mMlBYNkZkOFVMS2lteWpwSnRiWDFTMDRQWEhRSThTb1Q1SjdKeWdDNE1ESzZLZz04QUZDMkQzNQ==\n+com.amdocs.github.auth =Basic aGpvc2hpMjpnaHBfdU83NzFJWlZTbzZwRDB6ZnVFNzBuelM2blNSa0Y3M2RoYXpu\n\\ No newline at end of file"
    },
    {
        "sha": "bd803f18f68b1b4d27e1a6c7a557da0f02e62868",
        "filename": "src/main/resources/gitPayload.txt",
        "status": "added",
        "additions": 208,
        "deletions": 0,
        "changes": 208,
        "blob_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/blob/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fresources%2FgitPayload.txt",
        "raw_url": "https://github-us.production.tvn.com/hjoshi2/hackathon/raw/fa6c60ee5889d9693a0fbe0d6917c973a264fbd7/src%2Fmain%2Fresources%2FgitPayload.txt",
        "contents_url": "https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/contents/src%2Fmain%2Fresources%2FgitPayload.txt?ref=fa6c60ee5889d9693a0fbe0d6917c973a264fbd7",
        "patch": "@@ -0,0 +1,208 @@\n+{\n+  \"ref\": \"refs/heads/main\",\n+  \"before\": \"4651d8061d1c0f6cd720a34a60a79adc2ae49e7e\",\n+  \"after\": \"231882070e17d41b30570e70b3afbdf41814b24d\",\n+  \"repository\": {\n+    \"id\": 984,\n+    \"node_id\": \"MDEwOlJlcG9zaXRvcnk5ODQ=\",\n+    \"name\": \"hackathon\",\n+    \"full_name\": \"hjoshi2/hackathon\",\n+    \"private\": false,\n+    \"owner\": {\n+      \"name\": \"hjoshi2\",\n+      \"email\": \"harshavardhan.joshi@amdocs.com\",\n+      \"login\": \"hjoshi2\",\n+      \"id\": 337,\n+      \"node_id\": \"MDQ6VXNlcjMzNw==\",\n+      \"avatar_url\": \"https://github-us.production.tvn.com/avatars/u/337?\",\n+      \"gravatar_id\": \"\",\n+      \"url\": \"https://github-us.production.tvn.com/api/v3/users/hjoshi2\",\n+      \"html_url\": \"https://github-us.production.tvn.com/hjoshi2\",\n+      \"followers_url\": \"https://github-us.production.tvn.com/api/v3/users/hjoshi2/followers\",\n+      \"following_url\": \"https://github-us.production.tvn.com/api/v3/users/hjoshi2/following{/other_user}\",\n+      \"gists_url\": \"https://github-us.production.tvn.com/api/v3/users/hjoshi2/gists{/gist_id}\",\n+      \"starred_url\": \"https://github-us.production.tvn.com/api/v3/users/hjoshi2/starred{/owner}{/repo}\",\n+      \"subscriptions_url\": \"https://github-us.production.tvn.com/api/v3/users/hjoshi2/subscriptions\",\n+      \"organizations_url\": \"https://github-us.production.tvn.com/api/v3/users/hjoshi2/orgs\",\n+      \"repos_url\": \"https://github-us.production.tvn.com/api/v3/users/hjoshi2/repos\",\n+      \"events_url\": \"https://github-us.production.tvn.com/api/v3/users/hjoshi2/events{/privacy}\",\n+      \"received_events_url\": \"https://github-us.production.tvn.com/api/v3/users/hjoshi2/received_events\",\n+      \"type\": \"User\",\n+      \"site_admin\": false,\n+      \"ldap_dn\": \"CN=Harshavardhan Joshi,OU=UK VPN Access,OU=Users,OU=Avail-TVN,DC=production,DC=tvn,DC=com\"\n+    },\n+    \"html_url\": \"https://github-us.production.tvn.com/hjoshi2/hackathon\",\n+    \"description\": null,\n+    \"fork\": false,\n+    \"url\": \"https://github-us.production.tvn.com/hjoshi2/hackathon\",\n+    \"forks_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/forks\",\n+    \"keys_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/keys{/key_id}\",\n+    \"collaborators_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/collaborators{/collaborator}\",\n+    \"teams_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/teams\",\n+    \"hooks_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/hooks\",\n+    \"issue_events_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/issues/events{/number}\",\n+    \"events_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/events\",\n+    \"assignees_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/assignees{/user}\",\n+    \"branches_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/branches{/branch}\",\n+    \"tags_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/tags\",\n+    \"blobs_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/git/blobs{/sha}\",\n+    \"git_tags_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/git/tags{/sha}\",\n+    \"git_refs_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/git/refs{/sha}\",\n+    \"trees_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/git/trees{/sha}\",\n+    \"statuses_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/statuses/{sha}\",\n+    \"languages_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/languages\",\n+    \"stargazers_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/stargazers\",\n+    \"contributors_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/contributors\",\n+    \"subscribers_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/subscribers\",\n+    \"subscription_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/subscription\",\n+    \"commits_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/commits{/sha}\",\n+    \"git_commits_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/git/commits{/sha}\",\n+    \"comments_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/comments{/number}\",\n+    \"issue_comment_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/issues/comments{/number}\",\n+    \"contents_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/contents/{+path}\",\n+    \"compare_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/compare/{base}...{head}\",\n+    \"merges_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/merges\",\n+    \"archive_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/{archive_format}{/ref}\",\n+    \"downloads_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/downloads\",\n+    \"issues_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/issues{/number}\",\n+    \"pulls_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/pulls{/number}\",\n+    \"milestones_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/milestones{/number}\",\n+    \"notifications_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/notifications{?since,all,participating}\",\n+    \"labels_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/labels{/name}\",\n+    \"releases_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/releases{/id}\",\n+    \"deployments_url\": \"https://github-us.production.tvn.com/api/v3/repos/hjoshi2/hackathon/deployments\",\n+    \"created_at\": 1710688472,\n+    \"updated_at\": \"2024-03-17T15:46:30Z\",\n+    \"pushed_at\": 1710866006,\n+    \"git_url\": \"git://github-us.production.tvn.com/hjoshi2/hackathon.git\",\n+    \"ssh_url\": \"git@github-us.production.tvn.com:hjoshi2/hackathon.git\",\n+    \"clone_url\": \"https://github-us.production.tvn.com/hjoshi2/hackathon.git\",\n+    \"svn_url\": \"https://github-us.production.tvn.com/hjoshi2/hackathon\",\n+    \"homepage\": null,\n+    \"size\": 19,\n+    \"stargazers_count\": 0,\n+    \"watchers_count\": 0,\n+    \"language\": \"Java\",\n+    \"has_issues\": true,\n+    \"has_projects\": true,\n+    \"has_downloads\": true,\n+    \"has_wiki\": true,\n+    \"has_pages\": false,\n+    \"forks_count\": 0,\n+    \"mirror_url\": null,\n+    \"archived\": false,\n+    \"disabled\": false,\n+    \"open_issues_count\": 0,\n+    \"license\": null,\n+    \"allow_forking\": true,\n+    \"is_template\": false,\n+    \"topics\": [\n+\n+    ],\n+    \"visibility\": \"public\",\n+    \"forks\": 0,\n+    \"open_issues\": 0,\n+    \"watchers\": 0,\n+    \"default_branch\": \"main\",\n+    \"stargazers\": 0,\n+    \"master_branch\": \"main\"\n+  },\n+  \"pusher\": {\n+    \"name\": \"hjoshi2\",\n+    \"email\": \"harshavardhan.joshi@amdocs.com\"\n+  },\n+  \"enterprise\": {\n+    \"id\": 1,\n+    \"slug\": \"vubiquity-com\",\n+    \"name\": \"Vubiquity.com\",\n+    \"node_id\": \"MDEwOkVudGVycHJpc2Ux\",\n+    \"avatar_url\": \"https://github-us.production.tvn.com/avatars/b/1?\",\n+    \"description\": null,\n+    \"website_url\": null,\n+    \"html_url\": \"https://github-us.production.tvn.com/enterprises/vubiquity-com\",\n+    \"created_at\": \"2019-10-23T02:12:55Z\",\n+    \"updated_at\": \"2023-09-19T12:23:48Z\"\n+  },\n+  \"sender\": {\n+    \"login\": \"hjoshi2\",\n+    \"id\": 337,\n+    \"node_id\": \"MDQ6VXNlcjMzNw==\",\n+    \"avatar_url\": \"https://github-us.production.tvn.com/avatars/u/337?\",\n+    \"gravatar_id\": \"\",\n+    \"url\": \"https://github-us.production.tvn.com/api/v3/users/hjoshi2\",\n+    \"html_url\": \"https://github-us.production.tvn.com/hjoshi2\",\n+    \"followers_url\": \"https://github-us.production.tvn.com/api/v3/users/hjoshi2/followers\",\n+    \"following_url\": \"https://github-us.production.tvn.com/api/v3/users/hjoshi2/following{/other_user}\",\n+    \"gists_url\": \"https://github-us.production.tvn.com/api/v3/users/hjoshi2/gists{/gist_id}\",\n+    \"starred_url\": \"https://github-us.production.tvn.com/api/v3/users/hjoshi2/starred{/owner}{/repo}\",\n+    \"subscriptions_url\": \"https://github-us.production.tvn.com/api/v3/users/hjoshi2/subscriptions\",\n+    \"organizations_url\": \"https://github-us.production.tvn.com/api/v3/users/hjoshi2/orgs\",\n+    \"repos_url\": \"https://github-us.production.tvn.com/api/v3/users/hjoshi2/repos\",\n+    \"events_url\": \"https://github-us.production.tvn.com/api/v3/users/hjoshi2/events{/privacy}\",\n+    \"received_events_url\": \"https://github-us.production.tvn.com/api/v3/users/hjoshi2/received_events\",\n+    \"type\": \"User\",\n+    \"site_admin\": false,\n+    \"ldap_dn\": \"CN=Harshavardhan Joshi,OU=UK VPN Access,OU=Users,OU=Avail-TVN,DC=production,DC=tvn,DC=com\"\n+  },\n+  \"created\": false,\n+  \"deleted\": false,\n+  \"forced\": false,\n+  \"base_ref\": null,\n+  \"compare\": \"https://github-us.production.tvn.com/hjoshi2/hackathon/compare/4651d8061d1c...231882070e17\",\n+  \"commits\": [\n+    {\n+      \"id\": \"231882070e17d41b30570e70b3afbdf41814b24d\",\n+      \"tree_id\": \"544984adf69454d3a1d8557e23fa4c28ff7c1798\",\n+      \"distinct\": true,\n+      \"message\": \"Test commit\",\n+      \"timestamp\": \"2024-03-19T18:33:15+02:00\",\n+      \"url\": \"https://github-us.production.tvn.com/hjoshi2/hackathon/commit/231882070e17d41b30570e70b3afbdf41814b24d\",\n+      \"author\": {\n+        \"name\": \"hajoshi\",\n+        \"email\": \"hajoshi@amdocs.com\",\n+        \"username\": \"hjoshi2\"\n+      },\n+      \"committer\": {\n+        \"name\": \"hajoshi\",\n+        \"email\": \"hajoshi@amdocs.com\",\n+        \"username\": \"hjoshi2\"\n+      },\n+      \"added\": [\n+\n+      ],\n+      \"removed\": [\n+\n+      ],\n+      \"modified\": [\n+        \"src/main/resources/story_2/story2.txt\"\n+      ]\n+    }\n+  ],\n+  \"head_commit\": {\n+    \"id\": \"231882070e17d41b30570e70b3afbdf41814b24d\",\n+    \"tree_id\": \"544984adf69454d3a1d8557e23fa4c28ff7c1798\",\n+    \"distinct\": true,\n+    \"message\": \"Test commit\",\n+    \"timestamp\": \"2024-03-19T18:33:15+02:00\",\n+    \"url\": \"https://github-us.production.tvn.com/hjoshi2/hackathon/commit/231882070e17d41b30570e70b3afbdf41814b24d\",\n+    \"author\": {\n+      \"name\": \"hajoshi\",\n+      \"email\": \"hajoshi@amdocs.com\",\n+      \"username\": \"hjoshi2\"\n+    },\n+    \"committer\": {\n+      \"name\": \"hajoshi\",\n+      \"email\": \"hajoshi@amdocs.com\",\n+      \"username\": \"hjoshi2\"\n+    },\n+    \"added\": [\n+\n+    ],\n+    \"removed\": [\n+\n+    ],\n+    \"modified\": [\n+      \"src/main/resources/story_2/story2.txt\"\n+    ]\n+  }\n+}\n\\ No newline at end of file"
    }
]